/*==== Themes ====*/

body[data-theme="1"] {
  --app-main-hue: 160;

  --btn-background-saturation: 85%;
  --btn-background-hover-saturation: 90%;

  --btn-background-lightness: 80%;
  --btn-background-hover-lightness: 90%;

  --button-background-hue: 0;

  --btn-increase-hue: 120;
  --btn-decrease-hue: 0;
  --btn-min-hue: 15;
  --btn-max-hue: 140;
  --btn-reset-hue: 60;
  --btn-saved-hue: 280;
  --btn-clear-hue: 330;
  --btn-set-hue: 40;
}

body[data-theme="2"] {
  --app-main-hue: 180;

  --btn-background-saturation: 75%;
  --btn-background-hover-saturation: 90%;

  --btn-background-lightness: 75%;
  --btn-background-hover-lightness: 90%;

  --button-background-hue: var(--app-main-hue);

  --btn-increase-hue: var(--app-main-hue);
  --btn-decrease-hue: var(--app-main-hue);
  --btn-min-hue: var(--app-main-hue);
  --btn-max-hue: var(--app-main-hue);
  --btn-reset-hue: var(--app-main-hue);
  --btn-saved-hue: var(--app-main-hue);
  --btn-clear-hue: var(--app-main-hue);
  --btn-set-hue: var(--app-main-hue);
}

/*==== Typography ====*/

@import url("https://fonts.googleapis.com/css2?family=Roboto&display=swap");

@font-face {
  font-family: vazir;
  src: url(./font/Vazir-Bold-FD.ttf);
}

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;

  user-select: none;
}

html {
  font-family: "Roboto", sans-serif;
}

.title-container {
  margin-bottom: 4rem;
}

.title {
  font-size: 4.5rem;
  color: hsl(var(--app-main-hue), 80%, 90%);
}

.title-description {
  margin-top: 0.75em;
  font-size: 1.2rem;
  text-align: center;
  color: hsl(var(--app-main-hue), 80%, 90%, 0.5);
}

.last-subject {
  width: 50%;
  min-width: 750px;
  padding-top: 1rem;
  font-size: 2rem;
  margin-top: 2em;

  font-family: sans-serif;
  color: hsl(var(--app-main-hue), 80%, 90%);
}

.last-subject-span,
.number-span {
  font-weight: 600;
  color: hsl(var(--app-main-hue), 39%, 61%);
}

.form * {
  font: inherit;
}

.number {
  font-size: 100px;
  font-weight: bold;
  text-align: center;
  color: #eee;

  grid-area: number;
}

.number.starting {
  color: hsl(
    60,
    var(--btn-background-saturation),
    var(--btn-background-lightness)
  );
}
.number.max {
  color: hsl(
    120,
    var(--btn-background-saturation),
    var(--btn-background-lightness)
  );
}
.number.min {
  color: hsl(
    0,
    var(--btn-background-saturation),
    var(--btn-background-lightness)
  );
}
.number.saved {
  color: hsl(
    200,
    var(--btn-background-saturation),
    var(--btn-background-lightness)
  );
}
button {
  border: none;
  font-weight: 600;
  cursor: pointer;
  text-transform: uppercase;

  background-color: hsl(
    var(--btn-background-hue),
    var(--btn-background-saturation),
    var(--btn-background-lightness)
  );
  opacity: 0.7;
}

button:is(:hover, :focus) {
  background-color: hsl(
    var(--btn-background-hue),
    var(--btn-background-hover-saturation),
    var(--btn-background-hover-lightness)
  );
  outline: none;
  outline: 1px solid black;

  opacity: 1;
}

button:is(button, :hover) {
  transition: background-color 200ms ease-out;
}

.increase {
  --btn-background-hue: var(--btn-increase-hue);
  color: hsl(var(--btn-increase-hue), var(--btn-background-saturation), 18%);
  grid-area: increase;
}

.decrease {
  --btn-background-hue: var(--btn-decrease-hue);
  color: hsl(var(--btn-decrease-hue), var(--btn-background-saturation), 18%);
  grid-area: decrease;
}

.increase,
.decrease {
  font-size: 50px;

  border-radius: 50%;

  width: 100px;
  height: 100px;
  place-self: center;
}

button.deactive {
  opacity: 0.2;
  cursor: not-allowed;
}

button.deactive:is(:hover, :active) {
  background-color: hsl(
    var(--btn-background-hue),
    var(--btn-background-saturation),
    var(--btn-background-lightness)
  );
}

.button-action {
  font-size: 16px;
  padding: 0.25em 1em;
  border-radius: 0.75em;
}

.reset {
  --btn-background-hue: var(--btn-reset-hue);
  grid-area: reset;
}
button.min {
  --btn-background-hue: var(--btn-min-hue);
  grid-area: min;
}
button.max {
  --btn-background-hue: var(--btn-max-hue);
  grid-area: max;
}

.clear {
  --btn-background-hue: var(--btn-clear-hue);
  grid-area: clear;
}

button.saved {
  --btn-background-hue: var(--btn-saved-hue);
  grid-area: saved;
}

button.set {
  --btn-background-hue: var(--btn-set-hue);
  grid-area: set;
}

body {
  display: grid;
  justify-items: center;
  padding: 2em;
  background-color: hsl(var(--app-main-hue), 50%, 25%);
}

.counter {
  width: 50%;
  min-width: 750px;
  display: grid;

  grid-template-columns: auto 3fr auto;
  grid-template-rows: auto 1fr;
  grid-template-areas:
    " decrease number increase "
    " min . max "
    " set . reset "
    " . clear . "
    " . saved . ";

  padding: 5em;
  margin-bottom: 2em;
  gap: 0.5rem 0;

  background-color: hsl(var(--app-main-hue), 80%, 10%);
  border-radius: 16px;
  place-items: center;
  box-shadow: hsl(100, 20%, 10%, 0.25) 0px 30px 60px -12px inset,
    rgb(0, 0, 0, 0.3) 0px 18px 36px -18px inset;
}

/* ===== styling Form ===== */

label {
  align-self: center;
  padding-right: 1rem;
}

.form {
  width: 50%;
  min-width: 750px;
  font-size: 1.25rem;
  display: grid;
  grid-template-columns: auto 3fr auto;
  grid-template-areas: "label last submit";

  align-content: center;
}

.submit {
  grid-area: submit;
  --btn-background-hue: 20;
  padding: 0 1rem;
  border-radius: 0 10px 10px 0;
  text-transform: none;
}

.last-subject-input {
  grid-area: last;
  padding: 0.5rem;
}

.last-subject-input:focus {
  background-color: hsl(var(--app-main-hue), 30%, 86%);
}
/* Media query */
@media screen and (max-width: 768px) {
  /* remove the blue outline */
}
